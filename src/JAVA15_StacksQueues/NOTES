STACKS :

Algorithm - LIFO (Last In First Out) or FILO (First In Last Out)
Push
Pop
Peek

QUEUES :

Algorithm - FIFO (First In First Out) or LILO (Last In Last Out)
Insertion
Removal

In trees, we extensively use Stack and Queues

DEQUE :

Algorithm - we can insert/delete from start and last , both sides
When we do trees , there it will be use


CUSTOM STACK :

We took a pointer , as we add the items in stack the pointer is acts as a index and increments
to add the values inside the custom stack

in dynamic stack , only thing we need to change is the push method
we need to override it
implementation

data = [2,9,1,8,7]
temp = [0,0,0,0,0,0,0,0,0,0]

data copy to temp

temp = [2,9,1,8,7,0,0,0,0,0]
now data is pointing to temp , and temp is removed

data = [2,9,1,8,7,0,0,0,0,0]


QUEUE :
Add from front and end
remove form the front end

CIRCULAR QUEUE :

we have a circular queue
empty queue -> [0,0,0,0,0]
      index -> [0,1,2,3,4]
front and end both are at 0th index

insert at the end, like we inserted 8 , end goes to next index
we added 9 , end goes to next position like,
index -> [8,9,0,0,0]
here end is at 2th index

now we added 19,20,35 to look the queue -> [8,9,19,20,35]
so now the front is at 0th index and end is at 4th index

but now if we add another element , index 5th is not available , so we override the
0th index and add the value there and out front goes to the next index ,
and end goes to the first index
so now out queue is like [47,9,19,20,35]
so end = 0th index i.e 47
front = 1st index i.e 9

we use modulo operator to get to the first index after the queue is full and override the element
